apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply from: '../jacoco.gradle'
apply from: "https://gist.githubusercontent.com/danielsanfr/6bd03fd981b3940863a843fe748794a9/raw/apk-better-name.gradle"

android {

    signingConfigs {
        signature {
            keyAlias envs['keyAlias'] ?: System.env['KEY_ALIAS']
            keyPassword envs['keyPassword'] ?: System.env['KEY_PASSWORD']
            storeFile file(envs['keyPath'] ?: System.env['KEY_PATH'])
            storePassword envs['storePassword'] ?: System.env['STORE_PASSWORD']
        }
    }

    compileSdkVersion 26
    defaultConfig {
        applicationId "br.com.ilhasoft.voy"
        minSdkVersion 16
        targetSdkVersion 26
        multiDexEnabled true
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signature
        }
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }

    sourceSets {
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation "com.android.support:appcompat-v7:${versions.androidSupport}"
    implementation "com.android.support:multidex:${versions.multidex}"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.2-alpha1'

    kapt "com.android.databinding:compiler:${versions.gradle}"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:${versions.kotlin}"

    compile "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"
    compile "com.android.support:appcompat-v7:${versions.androidSupport}"
    compile "com.android.support:design:${versions.androidSupport}"
    compile "com.android.support:cardview-v7:${versions.androidSupport}"

    compile "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    compile "com.squareup.okhttp3:logging-interceptor:${versions.loggingInterceptor}"

    compile "org.bitbucket.ilhasoft.support-core:databinding:${versions.supportCore}"
    compile "org.bitbucket.ilhasoft.support-core:media:${versions.supportCore}"
    compile "org.bitbucket.ilhasoft.support-core:rx-graphics:${versions.supportCore}"
    compile("org.bitbucket.ilhasoft.support-core:core:${versions.supportCore}") {
        exclude group: "com.android.support", module: "appcompat-v7"
    }
    compile("org.bitbucket.ilhasoft.support-core:recyclerview:${versions.supportCore}") {
        exclude(group: 'com.android.support')
    }

    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    compile "com.github.bumptech.glide:glide:${versions.glide}"
    compile "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"

    compile "com.github.Ilhasoft:data-binding-validator:${versions.validator}"

    compile "de.hdodenhof:circleimageview:${versions.circleImageView}"

    compile "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
    compile "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
    compile "io.reactivex.rxjava2:rxkotlin:${versions.rxKotlin}"

    compile "com.jakewharton.rxbinding2:rxbinding:${versions.rxBinding}"

    compile "com.google.android:flexbox:${versions.flexboxLayout}"

    implementation "com.jakewharton.timber:timber:${versions.timber}"

    implementation "android.arch.lifecycle:extensions:1.0.0"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0"
    testImplementation "android.arch.core:core-testing:1.0.0"

    compile("com.github.hotchemi:permissionsdispatcher:${versions.dispatcher}") {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    kapt "com.github.hotchemi:permissionsdispatcher-processor:${versions.dispatcher}"

    implementation "com.google.android.gms:play-services-location:${versions.playServiceLocation}"

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.uphyca:stetho_realm:2.2.0'
    implementation 'com.google.android.exoplayer:exoplayer:2.7.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }
}