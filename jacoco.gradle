apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*$[0-9].*',
            '**/*Service**',
            '**/*UIModel**',
            '**/*DbModel**',
            '**/*DbHelper**',
            '**/*ViewHolder**',
            '**/*NavigationItem**',
            '**/*Activity**',
            '**/*Fragment**',
            '**/*Adapter**',
            '**/*Request**',
            '**/*Response**',
            '**/*Application**',
            '**/*Glide**',
            '**/*Companion**',
            '**/*Factory**',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/*_ViewBinding*.*',
            '**/*$Lambda$*.*',
            '**/*$inlined$*.*',
            '**/*$*$*.*', //Anonymous classes generated by kotlin
            'JAVAC.SYNTHCLASS',
            'JAVAC.SYNTHMETH',
            'JAVAC.NOT',
            'JAVAC.ENUM',
            "**/br/com/ilhasoft/voy/models/*",
            "**/br/com/ilhasoft/voy/shared/*",
            "**/br/com/ilhasoft/voy/ui/shared/*",
            "**/br/com/ilhasoft/voy/ui/base/*",
            "**/br/com/ilhasoft/voy/network/urls/*",
            "**/br/com/ilhasoft/voy/network/interceptors/*",
            "**/br/com/ilhasoft/voy/network/authorization/*"
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")
}